@inject AppState appState

@foreach(DateTime date in dates)
{
    var activities = GetActivitesForDay(date);
    <DaySummary Day="date" Activites="activities"></DaySummary>
}


@code {
    [Parameter]
    public DateTime End { get; set; }

    [Parameter]
    public DateTime Start { get; set; }

    List<DateTime> dates = new();

    protected override void OnParametersSet()
    {
        var daysInRange = (End - Start).TotalDays;

        for(int i = 0; i <= daysInRange; i++)
        {
            dates.Add(End.AddDays(-i));
        }

        dates.Sort((x, y) => y.CompareTo(x));
    }

    private List<Activity> GetActivitesForDay(DateTime day)
    {
        var activities = appState.LoggedInUser.Activities.Where(ua => ua.Date.DayOfYear == day.DayOfYear && ua.Date.Year == day.Year).OrderBy(ua => ua.Date).ToList();
        //foreach(Activity activity in activities)   // moved this to initial data grab
        //{
        //    activity.PowerHistory = PowerUtlities.GetPowerHistory(activity, appState.UsersActivities);
        //    activity.Intensity = PowerUtlities.GetRideIntensity(activity);
        //}
        return activities;
    }
}
