@page "/profile";

@inject AppState appState; 
@inject IStravaService stravaService;
@inject IActivityService activityService;
@inject IToastService toastService;
@inject NavigationManager nav;

<h4>@appState.LoggedInUser.Email</h4>

@if (String.IsNullOrWhiteSpace(appState.LoggedInUser.StravaAccessToken) == false)
{
    <p>Linked to Strava ID: @appState.LoggedInUser.StravaAccessToken</p>
    <button @onclick=HandleSync>Sync Activities</button>
}
else
{
    <button class="btn btn-strava" @onclick="RedirectToAuth">Link to Stava</button>
}

@code {
    private void RedirectToAuth()
    {
        UriBuilder uriBuilder = new()
        {
            Scheme = "https",
            Host = "strava.com",
            Path = "oauth/authorize"
        };

        var paramValues = HttpUtility.ParseQueryString(uriBuilder.Query);
        paramValues.Add("client_id", Constants.STRAVA_CLIENT_ID);
        paramValues.Add("redirect_uri", $"{Constants.BASE_URI}/oauth2/");
        paramValues.Add("response_type", "code");
        paramValues.Add("scope", "activity:read_all,profile:read_all");

        uriBuilder.Query = paramValues.ToString();

        nav.NavigateTo(uriBuilder.Uri.AbsoluteUri);
    }

    private async Task HandleSync()
    {
        try
        {
            appState.LoaderOn("Loading Rides...");

            var activities = await stravaService.GetActivitiesForUser();
            await activityService.AddActivities(activities);

            int rideNo = 1;
            foreach(Activity activity in activities)
            {
                appState.SetLoadingMsg($"Calculating data for {activity.Name} - ( {rideNo} / {activities.Count} )");
                var data = await stravaService.GetDataStreamForActivity(activity, "watts");
                await activityService.AddPowerDataToActivity(activity, data.Find(d => d.type == "watts"));
                rideNo++;
            }
        }
        catch (Exception ex)
        {
            toastService.ShowError($"There was an error syncing data from Strava - {ex.Message}");
        }
        finally
        {
            appState.LoaderOff();
        }
    }
}

<style>
    .btn-strava {
        color: white;
        background-color: var(--strava-orange);
    }
</style>
