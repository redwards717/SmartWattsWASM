@page "/"

@inject AppState appState; 
@inject NavigationManager nav;
@inject ILocalStorageService localStorage;
@inject IUserService userService;
@inject IActivityService activityService;
@inject IToastService toastService;

<h3>Home</h3>


@code{

    protected override async Task OnInitializedAsync()
    {
        try
        {

            var userid = await localStorage.GetItemAsync<string>("userid");

            if (String.IsNullOrWhiteSpace(userid) && appState.LoggedInUser is null)
            {
                nav.NavigateTo("/login");
            }
            else if (appState.LoggedInUser is null)
            {
                var user = await userService.GetUserById(userid);
                if(user == null)
                {
                    await localStorage.RemoveItemAsync("userid");
                    nav.NavigateTo("/login");
                    return;
                }

                if(user.TokenExpiration <= DateTime.Now)
                {
                    await userService.RefreshUserToken(user);
                }

                appState.SetUser(user);

                appState.LoaderOn("Scanning for new activities...");

                var activities = await activityService.GetAllActivitiesByUser(user);
                appState.SetUsersActivities(activities);

                var newCount = await activityService.FindAndAddNewActivities(appState.LoggedInUser, 30);

                if(newCount > 0)
                {
                    toastService.ShowSuccess($"{newCount} new Activity(s) loaded in from Strava");
                }
            }
        }
        catch (Exception ex)
        {
            toastService.ShowError($"error initilizing user - {ex.Message}");
        }
        finally
        {
            appState.LoaderOff();
        }
    }
}

   







