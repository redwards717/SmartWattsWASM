@inject AppState appState

@if(appState.LoggedInUser.Activities is not null && appState.LoggedInUser.Activities.Count > 0)
{
<table class="table table-sm table-bordered text-nowrap">
    <tr>
        <th>Interval</th>
        <th>Best Efforts</th>
        <th>Based on 1</th>
        <th>Based on 2</th>
        <th>Based on 3</th>
    </tr>
    @foreach (int interval in Constants.FTPCalculationIntervals)
    {
        FTPCalculations ftpCalc = ftpCalcs.Find(f => f.IntervalTime == interval);
        int calcFor1 = ftpCalc.GetFTPCalcFor1();
        int calcFor2 = ftpCalc.GetFTPCalcFor2();
        int calcFor3 = ftpCalc.GetFTPCalcFor3();
        <tr>
            <td class="text-center">@DateTimeUtilities.ConvertSecToReadable(interval, false)</td>
            <td class="text-center">@String.Join(", ", @ftpCalc.BestEfforts.OrderByDescending(i => i).Select(n => n.ToString()).ToArray())</td>
            <td class="text-center" style="background-color:@(appState.LoggedInUser.FTP == calcFor1 ? "lightblue" : "")">@calcFor1</td>
            <td class="text-center" style="background-color:@(appState.LoggedInUser.FTP == calcFor2 ? "lightblue" : "")">@calcFor2</td>
            <td class="text-center" style="background-color:@(appState.LoggedInUser.FTP == calcFor3 ? "lightblue" : "")">@calcFor3</td>
        </tr>
    }
</table>
}

@code {
    [Parameter]
    public DateTime LastActivityDate { get; set; }

    List<FTPCalculations> ftpCalcs;

    protected override void OnInitialized()
    {
        ftpCalcs = FTPUtilities.GetFTPData(appState.LoggedInUser.Activities.Where(a => a.Date >= LastActivityDate.AddDays(-42)));
    }
}
