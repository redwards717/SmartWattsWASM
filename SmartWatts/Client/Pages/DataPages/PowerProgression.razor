@page "/powerprogression"
@inject AppState appState
@inject NavigationManager nav

@if(currentPH.Count > 0)
{
<div class="container-fluid">
    <div class="row">
        <div class="col-6">
            <div class="title">
                <h4>Current Power Profile</h4>
            </div>
            <PowerProgressionTable PowerHistory="currentPH" Differences="differences" Current="true"></PowerProgressionTable>
        </div>
        <div class="col-6">
            <p class="pointer">Power Before <span @onclick=GoToLastRide>@mostRecentActivity.Name</span></p>
            <PowerProgressionTable PowerHistory="previousPH" Differences=@(new List<int>())></PowerProgressionTable>
        </div>
    </div>
</div>
}

@code {
    List<PowerHistory> currentPH = new();
    List<PowerHistory> previousPH = new();
    int daysBack = 1;
    int ridesAgo;
    DateTime now = DateTime.Now;

    List<KeyValuePair<int, string>> differences = new();

    protected override void OnInitialized()
    {
        ridesAgo = appState.LoggedInUser.Activities.Count(a => a.Date >= now.AddDays(-daysBack));

        foreach(int daysOfHistory in Constants.PowerProgressionDays)
        {
            currentPH.Add(PowerUtlities.GetPowerHistoryForProgression(now.AddDays(1), appState.LoggedInUser.Activities, daysOfHistory));
            previousPH.Add(PowerUtlities.GetPowerHistoryForProgression(now.AddDays(-daysBack), appState.LoggedInUser.Activities, daysOfHistory));
        }

        GetDifference();
    }

    private void GetPreviousHistory()
    {
        ridesAgo = appState.LoggedInUser.Activities.Count(a => a.Date >= now.AddDays(-daysBack));
        previousPH.Clear();

        foreach (int daysOfHistory in Constants.PowerProgressionDays)
        {
            previousPH.Add(PowerUtlities.GetPowerHistoryForProgression(now.AddDays(-daysBack), appState.LoggedInUser.Activities, daysOfHistory));
        }

        GetDifference();
    }

    private void GetDifference()
    {
        var current = currentPH.Find(ph => ph.LookbackDays == 42);
        var prev = previousPH.Find(ph => ph.LookbackDays == 42);
        foreach(int pp in Constants.PowerPoints)
        {
            if(current.PowerPoints[pp] > prev.PowerPoints[pp])
            {
                differences.Add(new(pp, "up"));
            }
            else if (current.PowerPoints[pp] < prev.PowerPoints[pp])
            {
                differences.Add(new(pp, "down"));
            }
        }
    }

    private void GoToRides()
    {
        var start = now.AddDays(-daysBack).ToUnixSeconds();
        var end = now.ToUnixSeconds();
        nav.NavigateTo($"/ridelog/{start}/{end}");
    }
}
